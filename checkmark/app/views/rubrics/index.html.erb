<style>
	#rubric_canvas {		
		width: 990px;
	}

	#rubric_menu {
		float: left;
	}
	#rubric_status_pane {		
		float: right;
		text-align: right;
	}
	#rubric_criteria_pane, #rubric_levels_pane {
		width: 450px;		
		height: 380px;
		margin-left: 30px;
		margin-top: 10px;
		float: left;
		border: 1px solid #AAAAAA;
	}
	#rubric_criteria_pane_menu, #rubric_levels_pane_menu {
		background: #DDDDDD;
		height: 50px;
		padding: 5px;
	}
	#rubric_criteria_pane_menu h1, #rubric_levels_pane_menu h1 {
		font-size: medium;
		margin: 0;
		color: #000000;
	}
	
	#rubric_criteria_pane_list, #rubric_levels_pane_list {
		overflow: auto;
		height: 320px;
		width: 450px;

	}
	
	#rubric_criteria_pane_instructions {
		border: 1px solid #7777FF;
		background: #DDDDFF;
		padding: 10px;
		font-weight: bold;
	}
	#rubric_status {
		font-weight: bold;
		padding-left: 10px;
		padding-right: 10px;
	}
	#selected_criterion_name {
		text-transform: capitalize;
		font-weight: bold;
	}
	.criterion_holder, .rubric_level {
		padding: 5px;
		background: #DDDDDD;
		font-weight: bold;
		margin-top: 5px;
		margin-left: 5px;
		margin-right: 5px;
		width: 415px;
		border: 1px solid #000000;
	}
	.criterion_holder_selected {
            background: #CCCCFF;
        }
        .criterion_title_div {
            cursor: pointer;
	    text-transform: capitalize;
        }
        
	.criterion_input_name, .level_input_name {
		background: #EEEEEE;
		font-size: medium;
		font-weight: bold;
		border: 1px solid #DDDDDD;
		float: left;
	}
	.criterion_delete {
		float: right;
	}
	.criterion_input_name {
		width: 300px;
	}
	.criterion_weight_display {
		margin-left: 10px;
		margin-right: 10px;
		display: inline;
		text-align: center;
	}
	.criterion_textarea_description, .level_textarea_description {
		background: #EEEEEE;
		font-size: medium;
		border: 1px solid #DDDDDD;
		width: 400px;
	}

	.hover_edit:hover {
		background: #EAEAEA;
		border: 1px dashed #DDDDDD;		
	}
	.editing {
		background: #f9ffb1;
		border: 1px dashed #d6de78;
	}
	
	.clear {
		clear: both;
	}
	.save_warning {
		background: yellow;
	}
	.save_success {
		color: green;
	}
	.capitalize {
		text-transform: capitalize;
	}
</style>
<%= stylesheet_link_tag("tabs") %>
<%= javascript_include_tag  'livepipe' %>
<%= javascript_include_tag  'tabs' %>

<script type="text/javascript" language="JavaScript">
	
	var Criterion = Class.create({
		initialize: function(name, description, weight, levels) {
			function done_edit(event) { 
				$('pull_focus').select();
				$('pull_focus').focus();
				Event.element(event).removeClassName('editing');
				Event.element(event).addClassName('hover_edit');
				made_change();
			}

			//Create the root div to hold on screen elements
			var root_div = new Element('div', {'class': 'criterion'});
			this.root_div = root_div;
			
			//The Criterion Name element
			this.name = name;
			var cri_name = new Element('input', {'class': 'criterion_input_name', 'type': 'text'});
			$(cri_name).addClassName('hover_edit').addClassName('capitalize');
			$(cri_name).value = this.name;
			Event.observe(cri_name, 'keypress', function(event){
				if (event.keyCode == Event.KEY_RETURN) {
					done_edit(event);
				}
			});
			Event.observe(cri_name, 'blur', function(event) {done_edit(event);});
			Event.observe(cri_name, 'click', 
				function(event) {
					Event.element(event).removeClassName('hover_edit');
					Event.element(event).addClassName('editing');
					Event.element(event).select();
				}
			);
                        this.cri_name = cri_name;

                        function update_name(event, criterion) {
                            $(criterion).title_div.update($F(criterion.cri_name));
			    this.name = $F(criterion.cri_name);
			    $('selected_criterion_name').update(this.name);
                        }
                        $(cri_name).observe('change', update_name.bindAsEventListener(this, this));
			
			var delete_button = new Element('input', {'type': 'button', 'class': 'criterion_delete', 'value': 'Delete'});
			var do_delete = function(event, criterion) {
				if(confirm('Are you sure you want to delete this criterion?')) {
					c_list.remove(criterion);
					made_change();
				}
			}
			$(delete_button).observe('click', do_delete.bindAsEventListener(null, this));
			
			$(root_div).insert(cri_name, {position: 'top'});
			$(root_div).insert(delete_button);
			$(root_div).insert(new Element('div', {'class':'clear'}), {position: 'bottom'});

			//The Criterion weight element
			
			this.weight = weight;
			this.weight_display = new Element('input', {'class' : 'criterion_input_weight'});
			$(this.weight_display).update(this.weight);
			
			var cri_weight_dec = new Element('input', {'type': 'button', 'value': '-'});
			var cri_weight_inc = new Element('input', {'type': 'button', 'value': '+'});
			
			var mod_weight = function(event, criterion, value) {
				if (criterion.weight + value > 0) {
					criterion.weight += value;
					$(criterion.weight_display).value = criterion.weight;
				}
			}

			$(cri_weight_dec).observe('click', mod_weight.bindAsEventListener(null, this, -1));
			$(cri_weight_inc).observe('click', mod_weight.bindAsEventListener(null, this, 1));
			
			var cri_weight_container = new Element('div', {'class':'criterion_input_weight_container'});
			$(cri_weight_container).update("Weight:");
			$(cri_weight_container).insert(cri_weight_dec);
			$(cri_weight_container).insert(this.weight_display);
			$(cri_weight_container).insert(cri_weight_inc);
			$(root_div).insert(cri_weight_container, {position: 'bottom'});
			
			//The Criterion description element
			this.description = description;
			var cri_description = new Element('textarea', {'class':'criterion_textarea_description'});
			$(cri_description).update(this.description);
			
			this.set_description = new Element('input', {'type':'button', 'value':'Set Description'});
			$(this.set_description).hide();
			
			var show_set_description = function(event, object, show) {
				if(show) {
					$(object).show();
				}
				else {
					$(object).hide();
				}
			}
			
			$(cri_description).observe('click', show_set_description.bindAsEventListener(null, this.set_description, true));
			$(cri_description).observe('blur', show_set_description.bindAsEventListener(null, this.set_description, false));
			$(this.set_description).observe('click', function(event) {
				Event.element(event).hide(); 
				$('pull_focus').select();
				$('pull_focus').focus();	
				made_change();
			});
			
			$(root_div).insert(cri_description, {position: 'bottom'});
			$(root_div).insert(this.set_description, {position: 'bottom'});

                        this.root_div_holder = new Element('div', {'class':'criterion_holder'});
                        this.title_div = new Element('div', {'class':'criterion_title_div'});
                        $(this.title_div).update(this.name);
                        $(this.title_div).hide();
                        
                        function show_me(event, criterion) {
                            criterion.show();
                            $(selected_criterion).hide();
                            selected_criterion = criterion;
                        }

                        $(this.title_div).observe('click', show_me.bindAsEventListener(this, this));
                        
                        this.root_div_holder.insert($(this.title_div), {'position':'top'});
                        this.root_div_holder.insert($(this.root_div), {'position':'bottom'});

			//Create Criterion Levels
			
			this.levels = levels;

		},
		hide: function() {
                 new Effect.BlindUp(this.root_div);
                 new Effect.Appear(this.title_div);
                 $(this.root_div_holder).removeClassName('criterion_holder_selected');
		},
		show: function() {
                 new Effect.BlindDown(this.root_div);
		 new Effect.Fade(this.title_div);
                 $(this.root_div_holder).addClassName('criterion_holder_selected');
		 $('selected_criterion_name').update(this.name);
		//TODO: Remove 
		$('rubric_levels').show();

		},
		root_div: null,
                root_div_holder: null,
                title_div: null,
		cri_name: null,
		description_input: null,
		weight_display: null,
		name: null,
		description: null,
		weight: null,
		levels: $A()
	})

	var CriterionList = Class.create({
		initialize: function(root_div) {
			this.root_div = root_div;
		},
		add: function(criterion) {
			this.root_array.push(criterion);
			$(this.root_div).insert(criterion.root_div_holder, {position: 'bottom'});
			$('selected_criterion_name').update(criterion.name);
			//TODO: Remove 
			$('rubric_levels').show();
		},
		remove: function(criterion) {
			this.root_array = this.root_array.without(criterion);
			$(criterion.root_div_holder).remove();
			$('selected_criterion_name').update('');
			//TODO: Remove 
			$('rubric_levels').hide();
		},
		root_div: null,
		root_array: $A()
	});
	
	var c_list = null;
	document.observe("dom:loaded", function() {
		c_list = new CriterionList($('rubric_criteria_pane_list'));
	});
</script>

<script type="text/javascript" language="JavaScript">
	var new_criterion_index = 0;
        var selected_criterion = null;
	
	function save_changes() {
		//TODO
		$('rubric_status').update('Changes saved!');
		$('rubric_status').removeClassName('save_warning');
		$('rubric_status').removeClassName('save_error');
		$('rubric_status').addClassName('save_success');
	}
	function add_criterion(){
		made_change();
		var blank_criterion = new Criterion('New Criterion', '', 1);
		c_list.add(blank_criterion);
                if(selected_criterion != null) {
                    selected_criterion.hide();
                }
                selected_criterion = blank_criterion;
                $(selected_criterion.root_div_holder).addClassName('criterion_holder_selected');
		$('rubric_criteria_pane_instructions').hide();
	}
	function made_change() {
		$('rubric_status').update("Changes have NOT yet been saved");
		$('rubric_status').removeClassName('save_success');
		$('rubric_status').removeClassName('save_error');
		$('rubric_status').addClassName('save_warning');
	}
	
document.observe('dom:loaded', function() {
	var tab_menu = new Control.Tabs('rubric_tabs');
	tab_menu.setActiveTab('manually_edit_rubric_canvas');
});

</script>

<ul id="rubric_tabs" class="subsection_tabs">
	<li class="tab"><a href="#manually_edit_rubric_canvas">Manually Edit Rubric</a></li>
	<li class="tab"><a href="#upload_rubric_file_canvas">Upload Rubric File</a></li>
</ul>


<div id="manually_edit_rubric_canvas">
	<input type="text" id="pull_focus" value="Hidden field to pull focus" style="display: none;">
	<div id="rubric_upper_pane">
	    <h2>Rubric Management:  <%= @assignment.name %></h2>	
		<div id="rubric_menu">
		<%= link_to '< Back to Manage Assignments', :controller => 'assignments', :action => 'index' %>
		</div>
		<div id="rubric_status_pane">
			<div id="rubric_status">No changes have been made</div>
			<%= button_to_function "Save Changes", "save_changes();" %>
		</div>
	</div>
	
	<div class="clear"></div>
	
	<div id="rubric_lower_pane">
		<div id="rubric_criteria_pane">
			<div id="rubric_criteria_pane_menu">
				<div style="float: left;">
					<h1>Rubric Criteria</h1>
				</div>
				<div style="float: right;">
					<%= button_to_function "+ Add Criterion", "add_criterion();" %>
				</div>
				<div class="clear"></div>
			</div>

			<div id="rubric_criteria_pane_list">
				<div id="rubric_criteria_pane_instructions">
					[UP ARROW]<p>Click "+ Add Criterion" to add the first Criterion to your Rubric</p>					
				</div>
			</div>
			
		</div>
		
		<div id="rubric_levels_pane">
			<div id="rubric_levels_pane_menu">
				<h1>Rubric Levels: <span id="selected_criterion_name"></span></h1>
				
			</div>
			<div id="rubric_levels_pane_list">
				
				<!-- Fake out -->
				<div class="rubric_level_holder" style="display: none;" id="rubric_levels">
					<div class="rubric_level">
						0. <input type="text" class="level_input_name" value="Not Applicable">
						<textarea class="level_textarea_description">This criterion was not satisfied whatsoever</textarea>
					</div>
					<div class="rubric_level">
						1. <input type="text" class="level_input_name" value="Needs Improvement">
						<textarea class="level_textarea_description">This criterion was met, but work needs considerable improvement</textarea>
					</div>
					<div class="rubric_level">
						2. <input type="text" class="level_input_name" value="Satisfactory">
						<textarea class="level_textarea_description">This criterion was met, but could stand some improvement</textarea>
					</div>
					<div class="rubric_level">
						3. <input type="text" class="level_input_name" value="Good">
						<textarea class="level_textarea_description">This criterion was met</textarea>
					</div>
					<div class="rubric_level">
						4. <input type="text" class="level_input_name" value="Excellent">
						<textarea class="level_textarea_description">This criterion was met excellently!</textarea>
					</div>

				</div>
				<!-- End Fake out -->
			</div>
			
			
		</div>
	</div>
</div>

<div id="upload_rubric_file_canvas">
<h1>Upload Rubric File</h1>
<form>
	<input type="file" name="rubric_file" id="rubric_file">
	<input type="submit" value="Upload File">
</form>
</div>
