<script>
  function rotate() {
    PDFView.rotatePages(180);
  }
  var index = 0;
  var files = <%= raw @error_files %>;

  function getFile(filename) {
    checkLastFile();
    $.ajax({
      method: 'GET',
      url: 'download_error_file_path',
      dataType: 'text',
      data: {
        assignment_id: <%= @assignment.id %>,
        file_name: filename
      },
      success: function (data) {
        webViewerLoad(data);
      },
      error: function (err) {
        console.log(err);
      }
    });
  }

  function checkLastFile() {
    if (files.length <= 1) {
      $('#next_file').addClass('disable');
      $('#previous_file').addClass('disable');
      return true;
    }
    return false;
  }

  function nextFile() {
    if (index < files.length - 1) {
      index += 1;
    } else {
      index = 0;
    }
    if (!checkLastFile()) {
      getFile(files[index]);
    }
  }

  function previousFile() {
    if (index > 0) {
      index -= 1;
    } else {
      index = files.length - 1;
    }
    if (!checkLastFile()) {
      getFile(files[index]);
    }
  }

  $(document).ready(function () {
    $('#upside_down').click(function () {
      rotate();
    });

    $('form').submit(function(e) {
      e.preventDefault();
      // grabbing existing user input data such as copy number, page number, and exam template
      var data = $(this).serializeArray().reduce(function(obj, item) {
        obj[item.name] = item.value;
        return obj;
      }, {});
      // appending filename to existing form data
      var filename = files[index];
      data['filename'] = filename;
      $.ajax({
        method: 'POST',
        url: '<%= fix_error_assignment_exam_templates_path(@assignment) %>',
        dataType: 'text',
        data: {
          data: data
        },
        success: function (data) {
          document.location.reload();
        },
        error: function (err) {
          console.log(err);
        }
      })
    });
  });

  getFile(files[0]);
</script>
