<script type='text/jsx'>
  /** @jsx React.DOM */

  var StudentsTable = React.createClass({
    getDefaultProps: function() {
      // Defines the columns used for the table and whether they
      // are sortable searchable. The default initially sorted
      // column is the first sortable column in the array.
      return {
        columns: [
          {
            id: 'user_name',
            content: '<%= j raw I18n.t(:'user.user_name') %>',
            sortable: true,
            searchable: true
          },
          {
            id: 'full_name',
            content: '<%= j raw I18n.t(:'user.full_name') %>',
            sortable: true,
            searchable: true
          },
          <%= raw @section_column  %>
          {
            id: 'graders',
            content:
              <input type='checkbox'
              onChange={this.gradersInStudentsCheckboxAllClicked}> <%= j raw I18n.t('graders.graders') %>
              </input>,
            sortable: true,
            searchable: true
          }
        ]
      }
    },
    getInitialState: function() {
      return {
        error: null,
        students: [],
        selected_students: []
      };
    },
    updateSelectedStudents: function(students) {
      this.setState({selected_students:students});
    },
    componentWillMount: function() {
      this.refresh();
    },
    // Asks for new info from backend and sets props accordingly.
    refresh: function() {
      document.getElementById('working').style.display = '';

      jQuery.ajax({
        url: '/en/grade_entry_forms/1/marks_graders/populate_students_table',

        method: 'POST',
        dataType: 'json',
        success: function(data) {
          this.setState({
            students: data,
            error: null
          });
        }.bind(this),
        error: function(xhr, status, text) {
          var error = text + ': ' + xhr.responseText;
          this.setState({
            error: error
          });
        },
        complete: function() {
          document.getElementById('working').style.display = 'none';
        }

      });
    },
    onError: function(error) {
      this.setState({
        error: error
      });
    },
    render: function() {
      // Do student-specific table stuff here.
      var students_data = this.state.students.map(function(student) {
        var g = {};
        g['id'] = student.id;
        g['checkbox'] = <input id={student.id} type='checkbox'
          checked={this.state.selected_students.indexOf(student.id) !== -1}
          onChange={this.checkboxClicked} />
        g['user_name'] = student.user_name;
        g['full_name'] = student.first_name + " " + student.last_name;
        g['section'] = student.section == "" ? "-" : student.section;
        var graders = student.graders.length > 0 ? [] : '';
        for (var i = 0; i < student.graders.length; i++) {
           graders.push(<div key={student.graders[i].membership_id}>
             <input id={'gest_' + student.graders[i].membership_id}
              name='gests[]'
              value={student.graders[i].membership_id}
              type='checkbox'
              onChange={this.graderCheckboxClicked} />{student.graders[i].user_name}</div>);

          /** checked={this.props.selected_graders_in_students.indexOf(student.graders[i].membership_id) !== -1 ? true : false} */

        }
        g['graders'] = graders;

        return g;
      }.bind(this));

      return (
        <div>
          <ErrorDiv error={this.state.error} />

          <Table data={students_data}
            search_placeholder={'<%= j raw I18n.t(:'search_students') %>'}
            selectable={true}
            onSelectedRowsChange={this.updateSelectedStudents}
            columns={this.props.columns}
            filters={this.props.filters} />
        </div>
      );
    }
  });

  React.renderComponent(<StudentsTable sections={<%= raw @sections.to_json %>} />, document.getElementById('students_table'));
</script>
