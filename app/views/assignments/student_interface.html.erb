<%= stylesheet_link_tag("livepipe/tabs")%>
<%= javascript_include_tag "livepipe/livepipe.js"%>
<%= javascript_include_tag "livepipe/window.js"%>
<%= javascript_include_tag "livepipe/tabs.js"%>

<script>
 var invite_modal = null;

 function invite(){
   invite_modal.open();
   $('invite_member').setValue('');
   return false;
 }

 function submit_invite(invite_member){
   invite_modal.close();
   <%=
    remote_function(
     :url => {:action => 'invite_member', :id => @assignment.id},
     :with => "'&invite_member=' + invite_member"
    )
   %>
 }

 document.observe("dom:loaded", function(){
    invite_modal = new Control.Modal($('invite_dialog'), {
      overlayOpacity: 0.75,
      className: 'invite_modal',
      fade: false
    });
 } )
</script>

<div id="title_bar"><h1> Assignment <%= h(sanitize(@assignment.name)) %></h1>
</div>
<% if flash[:fail_notice] %>
  <div class="notice">
    <%=flash[:fail_notice]%>
  </div>
<% end %>

<div class="column_floatLeft">
 <div class="bloc">
  <h2>Submissions</h2>
    <div class="bloc_content">
  <% if !@grouping.nil? %>
    <% if !@grouping.is_valid? %>
      <p class="notice">Your group is not valid. You can't submit
      anything.</p>
    <% end %>
     <h3>Overview</h3>
     <span class="info_number"><%=h @revision.revision_number %></span><span class="info"> revisions</span><br />
     <span class="info_number"><%=h @files.length.to_s %></span><span
     class="info"> files</span><br />
     <span class="info_number"><%=h @missing_assignment_files.length.to_s%></span><span class="info_red"> missing required files</span><br />
  <% else %>
    <p class="notice">You don't have any submission yet</p>
  <% end %>
  </div>
 </div>
 <div class="bloc">
    <%= render :partial => 'read'%>
 </div>
</div>

<div class="column_floatLeft">
 <div class="bloc">
  <h2>Group Information</h2>
    <div class="bloc_content">

         <% if @grouping.nil? %>
	   <p class="notice">
	     You don't have a group yet!
	   </p>

	   <% # Test if the student can form groupings or not %>
	   <% if @assignment.student_form_groups == false %>
	     <p>You cannot form groups for this assignment. Wait until
	     your instructor forms the group.</p>
	   <% end %>

	   <% # test if the student has been invited %>
	   <% if @student.has_pending_groupings_for?(@assignment.id)%>

	   <h3>Invitations</h3>
	     <% @pending_grouping.each do |grouping|%>
	     <div class="sub_bloc">
	       <p>You have been invited by <span class="last_name"><%= grouping.inviter.last_name %></span> <%= h(grouping.inviter.first_name) %></p>  
	    <ul>
	    <% grouping.memberships.each do |member|%>
	       <%= render :partial => "assignments/member", :locals =>
	       {:member => member, :grouping => grouping} %>
	    <% end -%>
	   </ul>

	     <%= link_to_remote I18n.t(:join), :url => { :action => 'join_group', :id => @assignment.id, :grouping_id => grouping.id} %>
	     <%= link_to_remote I18n.t(:refuse), 
	     :url => { :action => 'decline_invitation',
	     :id => @assignment.id, :grouping_id => grouping.id },
	     :html => {:class => "delete"}
	     %>
	     </div>
	     <div class="bloc_line"></div>
	     <% end %>
	   <% end %>
	   <h3>Form your own group</h3>
         <p> The groups must be from <b><%=
	h(@assignment.group_min)%></b> to <b><%= h(@assignment.group_max)%></b>
	people.</p>
         <% if @assignment.student_form_groups %>
	   <% if @assignment.group_min == 1 %>
	   <p><%= link_to_remote "Work alone", :url => {:action => 'creategroup', :id => @assignment.id, :workalone => 'true'}%></p>
	   <% end %>
	   <p>
	   <%= link_to_remote I18n.t(:create), :url => {:action => 'creategroup', :id => @assignment.id} %>
	   </p>
         <%end %>
	 <% else %>
	   <% # As the student already has a group, we display the
	      # informations on this group %>
	   <% # We check to see if the groupname is displayed
	   %>

	   <h3>
	   <% if @assignment.group_name_displayed == true %>
	     <%= h(@group.group_name) %>
	   <% else %>
	     Your group
	   <% end %>
            <% if @grouping.inviter == @current_user and !@grouping.is_valid? %>
	    <%= link_to_remote I18n.t(:delete),:url => { :action => 'deletegroup', :id => @assignment.id, :grouping_id =>  @grouping.id },
	    :html => {:title => "Delete this group", :class => "delete"},
	    :confirm => "Are you sure you want to delete this group?"
	    %> 
	    <% end %>
	   </h3>

	   <% # If the group not yet the right amount of members, display
	      # the information%>
	   <% if !@grouping.is_valid?%>
	     <p class="warning"> The group is not valid. You need to
	     invite more students. </p>
	   <% end %>

	   <% # For each member of this group, we display the
	      # informations we have on them 
	      %>
	   <ul>
	    <% @studentmemberships.each do |member|%>
	       <%= render :partial => "assignments/member", :locals =>
	       {:member => member, :grouping => @grouping} %>
	    <% end -%>
	   </ul>
	   <% if REPOSITORY_EXTERNAL_SUBMITS_ONLY %>
	   	<p>Repository location: <%= h(REPOSITORY_EXTERNAL_BASE_URL + "/" + @group.repository_name) %></p>
	   <% end %>
	   <% if @grouping.inviter == @current_user %>
            <% if @grouping.student_membership_number != @assignment.group_max %>
             <%= button_to_function I18n.t(:invite), 'invite(); return
	       false;' %>
	    <% end %>
	    <% end %>
	  <% end -%>
            </div>
            <div class="sub_bloc"> 
	     <h3> Group Properties </h3>
              <p> The groups must be from <b><%= h(@assignment.group_min)%></b>
	      to <b><%= h(@assignment.group_max)%></b> people.
	      </p>
	      <% if @assignment.student_form_groups %>
	      <p> Students are allowed to form groups.</p>
	      <% else%>
              <p> Instructors will form groups.</p>
	      <% end %>

            </div>
 </div>    
</div>

<div id="invite_dialog">
  <h2>Invite</h2>
  <p>
    <fieldset>
       <label> <%= I18n.t(:name)%> </label>
       <%= text_field_tag 'invite_member'%>
    </fieldset>
  </p>
  <p>
  <%= button_to_function I18n.t(:submit),
  "submit_invite(escape($F('invite_member')))" %>
  <%= button_to_function "Cancel", 'invite_modal.close()'%>
  </p>
</div>


