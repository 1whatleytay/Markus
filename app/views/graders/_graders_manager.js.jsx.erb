<script type='text/jsx'>
  /** @jsx React.DOM */

  var GradersManager = React.createClass({
    getInitialState: function() {
      return {
        assign_to_criteria: false,
        groups: [],
        graders: [],
        sections: []
      }
    },
    criteriaCheckboxClicked: function(event) {
      var dataLoad = { value: event.currentTarget.checked};
      jQuery.ajax({
        method: 'POST',
        url: 'graders/set_assign_criteria',
        data: dataLoad,
        success: function(data) {
          this.refresh();
        }.bind(this)
      });
    },
    componentWillMount: function() {
      this.refresh();
    },
    refresh: function() {
      //must collect data for both tables
     //1st element: true false (use criteria?_)
      //2nd elemnet: info for graders table
      //3rd element: info for groups table + criteria(if)
      jQuery.ajax({
        method: 'GET',
        url: 'graders',
        dataType: 'json',
        success: function(data) {
          console.log(data);
          this.setState({
            assign_to_criteria: data[0],
            sections: data[1],
            graders: data[2],
            groups: data[3]
          });
        }.bind(this)
      });
    },
    render: function() {
      var to_render = [];
      to_render.push(<input type='checkbox'
            checked={this.state.assign_to_criteria}
            onChange={this.criteriaCheckboxClicked}>Assign graders to criteria</input>);
      to_render.push(<ErrorDiv error={'blah'} />);
      to_render.push(<GradersTable graders={this.state.graders}
        selected_graders={[]}
        onSelectedGradersChange={null} />);
      to_render.push(<GradersActionsColumn refresh={this.props.refresh}
          performAction={this.performAction} />);

      to_render.push(<GroupsTableManager 
          assign_to_criteria={this.state.assign_to_criteria} />);
      return (<div>{to_render}</div>);
    }
  });

  var GroupsTableManager = React.createClass({
    propTypes: {
      assign_to_criteria: React.PropTypes.bool
    },
     render: function() {
      if (this.props.assign_to_criteria) {
        return <GroupsTableWithCriteria />
      } else {
        return <GroupsTableNoCriteria />
      }
    }
  });

  var GroupsTableWithCriteria = React.createClass({
    componentDidMount: function() {
      jQuery('#group-tabs').tabs();
    },
    render: function() {
      return (
        <div className={'colRightGroups'}>
          <div className={'wrapRightGroups'}>
            <div id='group-tabs' className='tab-pane'>
              <ul>
                <li><a href='#groups-tab'><span>Groups</span></a></li>
                <li><a href='#criteria-tab'><span>Criteria</span></a></li>
              </ul>
             <div id='groups-tab'>
               <p>hey</p>
             </div>
             <div id='criteria-tab'>
               <p>yo</p>
            </div>
          </div>
          </div>
        </div>);
    }
  });

  var GroupsTableNoCriteria = React.createClass({
    render: function() {
      return (
      <div className={'colRightGroups'}>
        <div className={'wrapRightGroups'}>
          <p>sdgsd</p>
        </div>
      </div>
      );
    }
  });

  React.renderComponent(<GradersManager/>, document.getElementById('gradersManager'));
</script>
