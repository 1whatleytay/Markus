@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
          border-radius: $radius;
}

@mixin border-radius-top($radius) {
  -webkit-border-top-right-radius: $radius;
   -webkit-border-top-left-radius: $radius;
      -moz-border-radius-topright: $radius;
       -moz-border-radius-topleft: $radius;
          border-top-right-radius: $radius;
           border-top-left-radius: $radius;
}

@mixin border-radius-bottom($radius) {
  -webkit-border-bottom-right-radius: $radius;
   -webkit-border-bottom-left-radius: $radius;
      -moz-border-radius-bottomright: $radius;
       -moz-border-radius-bottomleft: $radius;
          border-bottom-right-radius: $radius;
           border-bottom-left-radius: $radius;
}

@mixin box-shadow($shadow...) {
  -webkit-box-shadow: $shadow;
     -moz-box-shadow: $shadow;
          box-shadow: $shadow;
}

@mixin background-gradient($start, $end) {
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0, $start), color-stop(1, $end));
  background: -moz-linear-gradient(center top, $start 0%, $end 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='$start', endColorstr='$end');
  background-color: $start;
}

@mixin size($width, $height:$width) {
  height: $height;
  width: $width;
}

@mixin transition($property, $duration, $timing-function:"ease", $delay:"0s") {
  -webkit-transition: $property $duration #{$timing-function} #{$delay};
     -moz-transition: $property $duration #{$timing-function} #{$delay};
      -ms-transition: $property $duration #{$timing-function} #{$delay};
       -o-transition: $property $duration #{$timing-function} #{$delay};
          transition: $property $duration #{$timing-function} #{$delay};
}

$breakpoints: (
  'tiny':   ( max-width:  360px ),
  'small':  ( max-width:  500px ),
  'medium': ( min-width:  992px ),
  'large':  ( min-width: 1200px ),
  'custom': ( min-height:  40em )
);

@mixin breakpoint($name) {
  @if map-has-key($breakpoints, $name) {
    @media #{inspect(map-get($breakpoints, $name))} {
      @content;
    }
  }
  @else {
    @warn "Couldn't find a breakpoint named `#{$name}`.";
  }
}
